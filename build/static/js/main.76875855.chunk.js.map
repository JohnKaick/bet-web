{"version":3,"sources":["aposta/api.js","app/date.js","grupo/modal.component.js","grupo/api.js","aposta/modal.component.js","aposta/component.js","app/route.js","serviceWorker.js","index.js"],"names":["getAll","axios","get","updateResultado","data","post","concat","id","resultado","date","_ref","name","value","onChange","react_default","a","createElement","rc_datepicker","v","format","locale","showOnInputClick","ModalGrupo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","close","onOpen","onSalvar","state","open","nome","e","setState","defineProperty","_this2","put","then","getApostas","_this$state","Modal","trigger","children","size","Icon","link","style","floated","onClick","Header","Content","Form","Field","width","control","Input","label","Actions","Button","primary","icon","content","Component","float","margin","ModalAposta","onGrupoSelected","valor","retorno","grupo","grupos","grs","_ref2","_this3","Select","options","map","g","key","_id","text","Group","App","handleClick","titleProps","index","newIndex","activeIndex","greenClick","redClick","onFiltro","dtInicio","Date","dtFinal","apostas","totalAposta","totalRetorno","totalLucro","apt","ttA","ttR","apts","forEach","catch","err","_this4","_this5","Container","aposta_modal_component","modal_component","Responsive","onlyMobile","fluid","minWidth","onlyTablet","Grid","Column","computer","tablet","length","Statistic","Value","Label","color","Accordion","styled","i","Title","active","green","red","vertical","circular","createdAt","toLocaleDateString","center","marginTop","right","textAlign","BrowserRouter","Switch","Route","exact","path","component","Aposta","Redirect","to","React","Boolean","window","location","hostname","match","ReactDOM","render","route_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76875855.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport function getOne(id) {\n    return axios.get(`http://apibet.jkapp.com.br/api/aposta/obter/${id}`)\n}\n\nexport function getAll() {\n    return axios.get(`http://apibet.jkapp.com.br/api/aposta`)\n}\n\nexport function create(data) {\n    return axios.put(`http://apibet.jkapp.com.br/api/aposta/cadastrar/${data.grupo}`, {\n        nome: data.nome,\n        valor: data.valor,\n        retorno: data.retorno,\n        data: data.data,\n    })\n}\n\nexport function update(data) {\n    return axios.post(`http://apibet.jkapp.com.br/api/aposta/editar/${data.id}`, {\n        nome: data.nome,\n        valor: data.valor,\n        retorno: data.retorno,\n        data: data.data,\n    })\n}\n\nexport function remover(id) {\n    return axios.delete(`http://apibet.jkapp.com.br/api/aposta/remover/${id}`)\n}\n\nexport function updateResultado(data) {\n    return axios.post(`http://apibet.jkapp.com.br/api/aposta/resultado/${data.id}`, {\n        resultado: data.resultado,\n    })\n}\n\nexport function getFiltro(data) {\n    return axios.post(`http://apibet.jkapp.com.br/api/aposta/filtro`, {\n        dtInicio: data.dtInicio,\n        dtFinal: data.dtFinal\n    })\n}","import React from 'react'\nimport 'moment/locale/pt-br.js'\nimport { DatePickerInput } from 'rc-datepicker';\n\nexport default ({ name, value, onChange }) => (\n    <DatePickerInput\n        onChange={(v) => {\n            onChange(this, { name: name, value: v })\n        }}\n        value={value}\n        name={name}\n        format='DD/MM/YYYY'\n        locale='pt-br'\n        showOnInputClick={true}\n    />\n)","import React, { Component } from 'react';\nimport { Modal, Form, Button, Input, Header, Icon } from 'semantic-ui-react';\nimport { create } from './api';\n\nclass ModalGrupo extends Component {\n\n    constructor(props) {\n        super(props)\n        this.onChange = this.onChange.bind(this)\n        this.close = this.close.bind(this)\n        this.onOpen = this.onOpen.bind(this)\n        this.onSalvar = this.onSalvar.bind(this)\n        this.state = {\n            open: false,\n            nome: '',\n        }\n    }\n\n    onChange(e, { name, value }) {\n        this.setState({ [name]: value })\n    }\n\n    close() {\n        this.setState({ open: false })\n    }\n\n    onOpen() {\n        this.setState({ \n            nome: '',\n            open: true\n        })\n    }\n\n    onSalvar() {\n        create({\n            nome: this.state.nome\n        }).then(() => {\n            this.close()\n            this.props.getApostas()\n        })\n    }\n\n    render() {\n        const { open, nome } = this.state\n\n        return (\n            <Modal\n                open={open}\n                trigger={this.props.children}\n                onOpen={this.onOpen}\n                size='small'\n                >\n                <Icon link size='large' name='cancel' style={style.floated} onClick={this.close}/>\n                <Header>Criar grupo</Header>\n                <Modal.Content>\n                    <Form>\n                        <Form.Field\n                            width={16}\n                            control={Input}\n                            label='Nome'\n                            name='nome'\n                            value={nome}\n                            onChange={this.onChange}\n                            />\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary\n                        icon=\"save\"\n                        content='Salvar'\n                        onClick={this.onSalvar} />\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nconst style = {\n    floated: { float: 'right', margin: '10px' }\n}\n\nexport default ModalGrupo","import axios from 'axios'\n\nexport function getOne(id) {\n    return axios.get(`http://apibet.jkapp.com.br/api/grupo/obter/${id}`)\n}\n\nexport function getAll() {\n    return axios.get(`http://apibet.jkapp.com.br/api/grupo`)\n}\n\nexport function create(data) {\n    return axios.put(`http://apibet.jkapp.com.br/api/grupo/cadastrar`, {\n        nome: data.nome,       \n    })\n}\n\nexport function update(data) {\n    return axios.post(`http://apibet.jkapp.com.br/api/grupo/editar/${data.id}`, {\n        nome: data.nome,       \n    })\n}\n\nexport function remover(id) {\n    return axios.delete(`http://apibet.jkapp.com.br/api/grupo/remover/${id}`)\n}","import React, { Component } from 'react';\nimport { Modal, Form, Button, Input, Header, Icon, Select } from 'semantic-ui-react';\nimport { create } from './api';\nimport { getAll as getGrupo } from './../grupo/api';\nimport DatePicker from './../app/date';\n\nclass ModalAposta extends Component {\n\n    constructor(props) {\n        super(props)\n        this.onChange = this.onChange.bind(this)\n        this.close = this.close.bind(this)\n        this.onOpen = this.onOpen.bind(this)\n        this.onGrupoSelected = this.onGrupoSelected.bind(this)\n        this.onSalvar = this.onSalvar.bind(this)\n        this.state = {\n            open: false,\n            nome: '',\n            data: null,\n            valor: null,\n            retorno: null,\n            grupo: null,\n            grupos: []\n        }\n    }\n\n    onChange(e, { name, value }) {\n        this.setState({ [name]: value })\n    }\n\n    close() {\n        this.setState({ open: false })\n    }\n\n    onOpen() {\n        this.setState({ \n            open: true,\n            nome: '',\n            data: null,\n            valor: null,\n            retorno: null,\n            grupo: null,\n            grupos: []\n        })\n        getGrupo().then((grs) => {\n            this.setState({ \n                grupos: grs.data\n            })\n        })\n    }\n\n    onGrupoSelected(e, { name, value }) {\n        this.setState({\n            grupo: value\n        })\n    }\n\n    onSalvar() {\n        create({\n            nome: this.state.nome,\n            data: this.state.data,\n            valor: this.state.valor,\n            retorno: this.state.retorno,\n            grupo: this.state.grupo,\n        }).then(() => {\n            this.close()\n            this.props.getApostas()\n        })\n    }\n\n    render() {\n        const { open, nome, valor, retorno, grupo, data, grupos } = this.state\n\n        return (\n            <Modal\n                open={open}\n                trigger={this.props.children}\n                onOpen={this.onOpen}\n                size='small'\n                >\n                <Icon link size='large' name='cancel' style={style.floated} onClick={this.close}/>\n                <Header>Criar aposta</Header>\n                <Modal.Content>\n                    <Form>\n                        <Form.Field \n                            width={16}\n                            control={Select}\n                            label='Grupo'\n                            name='grupo'\n                            options={grupos.map(g => {\n                                return { key: g._id, text: g.nome, value: g._id }\n                            })}\n                            onChange={this.onGrupoSelected}\n                            />\n                        <Form.Group>\n                            <Form.Field \n                                width={8}\n                                control={Input}\n                                label='Nome'\n                                name='nome'\n                                value={nome}\n                                onChange={this.onChange}\n                                />\n                            <Form.Field width={8} >\n                                <label>Data</label>\n                                <DatePicker name=\"data\" value={data} onChange={this.onChange} />\n                            </Form.Field>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Field \n                                width={8}\n                                control={Input}\n                                label='Valor'\n                                name='valor'\n                                value={valor}\n                                onChange={this.onChange}\n                                />\n\n                            <Form.Field \n                                width={8}\n                                control={Input}\n                                label='Retorno'\n                                name='retorno'\n                                value={retorno}\n                                onChange={this.onChange}\n                                />\n                        </Form.Group>\n                    </Form>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary\n                            icon=\"dollar sign\"\n                            content='Apostar'\n                            onClick={this.onSalvar} />\n                </Modal.Actions>\n            </Modal>\n        )\n    }\n}\n\nconst style = {\n    floated: { float: 'right', margin: '10px' }\n}\n\nexport default ModalAposta","import React, { Component } from 'react';\nimport { getAll, updateResultado, getFiltro } from './api'\nimport { Container, Icon, Accordion, Button, Responsive, Grid, Statistic } from 'semantic-ui-react';\nimport DatePicker from './../app/date';\nimport ModalGrupo from './../grupo/modal.component';\nimport ModalAposta from './modal.component';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props)\n        this.onChange = this.onChange.bind(this)\n        this.get = this.get.bind(this)\n        this.onFiltro = this.onFiltro.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        this.greenClick = this.greenClick.bind(this)\n        this.redClick = this.redClick.bind(this)\n        this.state = {\n            activeIndex: 0,\n            dtInicio: new Date(),\n            dtFinal: new Date(),\n            apostas: [],\n            totalAposta: null,\n            totalRetorno: null,\n            totalLucro: null,\n\n        }\n    }\n\n    componentDidMount() {\n        getAll().then(apt => {\n            let ttA = 0\n            let ttR = 0\n            let ttQ = 0\n            let apts = apt.data\n\n            apts.forEach(a => {\n                ttA += a.valor\n                if (a.resultado === 'green') {\n                    ttR += a.retorno\n                }\n                ttQ += 1                \n            });\n\n            this.setState({\n                apostas: apts,\n                totalAposta: ttA,\n                totalRetorno: ttR,\n                totalLucro: ttR - ttA,\n            })\n        }).catch(err => this.setState({ apostas: [] }))\n    }\n\n    get() {\n        getAll().then(apt => {\n            let ttA = 0\n            let ttR = 0\n            let ttQ = 0\n            let apts = apt.data\n\n            apts.forEach(a => {\n                ttA += a.valor\n                if (a.resultado === 'green') {\n                    ttR += a.retorno\n                }\n                ttQ += 1                \n            });\n\n            this.setState({\n                apostas: apts,\n                totalAposta: ttA,\n                totalRetorno: ttR,\n                totalLucro: ttR - ttA,\n            })\n        }).catch(err => this.setState({ apostas: [] }))\n    }\n\n    onChange(e, { name, value }) {\n        this.setState({ [name]: value })\n    }\n\n    handleClick = (e, titleProps) => {\n        const { index } = titleProps\n        const { activeIndex } = this.state\n        const newIndex = activeIndex === index ? -1 : index\n    \n        this.setState({ activeIndex: newIndex })\n    }\n\n    onFiltro() {\n        getFiltro({\n            dtInicio: this.state.dtInicio,\n            dtFinal: this.state.dtFinal,\n        }).then(apt => {\n            let ttA = 0\n            let ttR = 0\n            let ttQ = 0\n            let apts = apt.data\n\n            apts.forEach(a => {\n                ttA += a.valor\n                if (a.resultado === 'green') {\n                    ttR += a.retorno\n                }\n                ttQ += 1\n            });\n\n            this.setState({\n                apostas: apts,\n                totalAposta: ttA,\n                totalRetorno: ttR,\n                totalLucro: ttR - ttA,\n            })\n        }).catch(err => this.setState({ apostas: [] }))\n    }\n\n    greenClick = (e, props) => {\n        const { id } = props\n        updateResultado({ resultado: 'green', id: id }).then(() => {\n            this.get()\n        })\n    }\n\n    redClick = (e, props) => {\n        const { id } = props\n        updateResultado({ resultado: 'red', id: id }).then(() => {\n            this.get()\n        })\n    }\n\n    render() {\n\n        const { activeIndex, dtInicio, dtFinal, apostas, totalAposta, totalLucro, totalRetorno } = this.state\n\n        return (\n            <div>\n                <Container>\n                    \n                    <div style={style.margin}>\n                        <ModalAposta getApostas={this.get}>\n                            <Button primary floated='right'><Icon name='plus' /> Apostas</Button>\n                        </ModalAposta>\n                        <ModalGrupo getApostas={this.get}>\n                            <Button primary><Icon name='plus' /> Grupo</Button>\n                        </ModalGrupo>\n                    </div>\n\n                    <Responsive {...Responsive.onlyMobile}>\n                        <div style={style.margin}>\n                            <label>Data Início:</label>\n                            <DatePicker name=\"dtInicio\" value={dtInicio} onChange={this.onChange} />\n                        </div>\n                        <div style={style.margin}>\n                            <label>Data final:</label>\n                            <DatePicker name=\"dtFinal\" value={dtFinal} onChange={this.onChange} />     \n                        </div>\n                        <div style={style.margin}>\n                            <Button fluid onClick={this.onFiltro}><Icon name='filter' /> Filtro</Button>\n                        </div>\n                    </Responsive>\n                    <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n                        <Grid>\n                            <Grid.Column computer={5} style={style.margin}>\n                                <label>Data Início:</label>\n                                <DatePicker name=\"dtInicio\" value={dtInicio} onChange={this.onChange} />\n                            </Grid.Column>\n                            <Grid.Column computer={5} style={style.margin}>\n                                <label>Data final:</label>\n                                <DatePicker name=\"dtFinal\" value={dtFinal} onChange={this.onChange} />                            \n                            </Grid.Column>\n                            <Grid.Column tablet={4} computer={3} style={style.margin}>\n                                <label>.</label>\n                                <Button fluid onClick={this.onFiltro}><Icon name='filter' /> Filtro</Button>\n                            </Grid.Column>\n                        </Grid>             \n                    </Responsive>\n\n                    { apostas && apostas.length > 0 && (\n                        <div>                                \n                            <h3 style={style.margin}>Estatística:</h3>\n                            <Statistic size='tiny'>\n                                <Statistic.Value>{totalAposta}</Statistic.Value>\n                                <Statistic.Label>Apostas</Statistic.Label>\n                            </Statistic>\n                            <Statistic size='tiny'>\n                                <Statistic.Value>{totalRetorno}</Statistic.Value>\n                                <Statistic.Label>Retorno</Statistic.Label>\n                            </Statistic>\n                            { totalLucro > 0 ? (\n                            <Statistic size='tiny' color='blue'>\n                                <Statistic.Value>{totalLucro}</Statistic.Value>\n                                <Statistic.Label>Lucro</Statistic.Label>\n                            </Statistic>\n                            ) : (\n                            <Statistic size='tiny' color='red'>\n                                <Statistic.Value>{totalLucro}</Statistic.Value>\n                                <Statistic.Label>Lucro</Statistic.Label>\n                            </Statistic>\n                            )}\n                        </div>\n                    )}\n                    \n                    { apostas && apostas.length > 0 ? (\n                        <div>\n                            <h3 style={style.margin}>Apostas:</h3>\n                            <Accordion fluid styled style={style.margin}>\n                                { apostas.map((a, i) => (\n                                    <div>\n                                        <Accordion.Title active={activeIndex === i} index={i} onClick={this.handleClick}>\n                                        { a.resultado === 'green' && \n                                            <div>\n                                                <b> G: {a.grupo.nome}</b> / <b> A: {a.valor}</b> / <b> R: {a.retorno}</b> <b style={style.green}> Green</b>\n                                            </div>\n                                        }\n                                        { a.resultado === 'red' && \n                                            <div>\n                                                <b> G: {a.grupo.nome}</b> / <b> A: {a.valor}</b> / <b> R: {a.retorno}</b> <b style={style.red}> Red</b>\n                                            </div>\n                                        }\n                                        { a.resultado === '' && \n                                            <div>\n                                                <b> G: {a.grupo.nome}</b> / <b> A: {a.valor}</b> / <b> R: {a.retorno}</b>\n                                            </div>\n                                        }\n                                        </Accordion.Title>\n                                        <Accordion.Content active={activeIndex === i}>\n                                            <Button.Group floated='right' vertical>\n                                                <Button color='green' circular icon='check' id={a._id} onClick={this.greenClick}/>\n                                                <Button color='red' circular icon='cancel' id={a._id} onClick={this.redClick}/>\n                                            </Button.Group>\n                                            <b> Data: {new Date(a.createdAt).toLocaleDateString()}</b> \n                                            <br />\n                                            <b> Nome: {a.nome}</b> \n                                            <br />\n                                            <b> Grupo: {a.grupo.nome}</b>\n                                            <br />\n                                            <b> Aposta: {a.valor}</b> / <b> Retorno: {a.retorno}</b>\n                                        </Accordion.Content>\n                                    </div>\n                                ))}\n                            </Accordion>\n                        </div>\n                        ) : (\n                            <h2 style={style.center}>Sem apostas na data de hoje</h2>\n                        )}                    \n                </Container>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    margin: { marginTop: '15px' },\n    right: { float: 'right' },\n    green: { color: 'green', float: 'right' },\n    red: { color: 'red', float: 'right' },\n    center: { textAlign: 'center' }\n};\n\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Aposta from '../aposta/component'\n\nexport default class extends React.Component {\n    render() {\n\n        return (\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Aposta} />\n\n                <Redirect to=\"/\" />\n              </Switch>\n            </Router>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/route';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'rc-datepicker/lib/style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}